{"mappings":"AAEA,MAAMA,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,6BACrCE,EAAQH,SAASC,cAAc,WAC/BG,EAAaJ,SAASC,cAAc,gBACpCI,EAAUL,SAASC,cAAc,YACjCK,EAAQC,GAAS,IAAIA,EAAMC,UAAUC,SAAQC,GAAOA,EAAIC,WACxDC,EAAUZ,SAASC,cAAc,cACjCY,EAAW,IAAM,IAAIC,eAAe,aAAc,IACxD,IACIC,EAAO,EACPC,EAAOd,EAAYe,MAKvBC,eAAeC,EAAYC,EAAMC,GAC/B,IACE,MAAMC,QAAiBC,MAAMC,IAC3B,qEAAqEJ,kEAAqEC,iBAG5I,OADAI,QAAQC,IAAIJ,GACLA,EAASK,I,CAChB,MAAOC,GACPH,QAAQC,IAAIE,E,EAqDhB,SAASC,EAAcC,GACrB,MAAMC,EAASD,EAAKE,KACjBC,KAAIC,GACI,kEAC0BA,EAAIC,oDAAoDD,EAAIE,sBAAsBF,EAAIG,uHAG7FH,EAAII,8FAGJJ,EAAIK,iGAGDL,EAAIM,qGAGHN,EAAIO,+DAKnCC,KAAK,IACRrC,EAAQsC,mBAAmB,YAAaZ,E,CAtF1CnB,EAAQgC,MAAMC,QAAU,OACxB1C,EAAMyC,MAAMC,QAAU,OA6DtBzC,EAAW0C,iBAAiB,UA/C5B5B,eAA4B6B,GAC1BA,EAAGC,iBACH1C,EAAMD,GACNO,EAAQgC,MAAMC,QAAU,OACxB9B,EAAO,EACPC,EAAOd,EAAYe,MACnBQ,QAAQC,IAAIV,GACZG,EAAYH,EAAMD,GACfkC,MAAKC,IACJzB,QAAQC,IAAI,qBAAqBwB,EAAKlB,KAAKmB,UAC3C1B,QAAQC,IAAI,eAAewB,EAAKE,aAChC,IAAIC,EAAaC,KAAKC,KAAKL,EAAKE,UA9BxB,IA+BR3B,QAAQC,IAAI,gBAAgB2B,KAExBH,EAAKlB,KAAKmB,OAAS,GACrBK,SAASC,OAAOC,QAAQ,oBAAoBR,EAAKE,qBACjDvB,EAAcqB,GACdzB,QAAQC,IAAI,iBAAiBX,KAC7BF,IAGAV,EAAMyC,MAAMC,QAAU,QACtB1C,EAAM2C,iBAAiB,SAAS,KAC9B/C,EAAa4D,eAAe,CAC1BC,SAAU,UACV,IAGA7C,EAAOsC,EACTzC,EAAQgC,MAAMC,QAAU,SAExBjC,EAAQgC,MAAMC,QAAU,OACxBpB,QAAQC,IAAI,4BACZ8B,SAASC,OAAOI,KACd,iEAIJL,SAASC,OAAOK,QACd,4EAEFxD,EAAMD,G,IAGT0D,OAAMnC,GAASH,QAAQC,IAAIE,I,IA8BhChB,EAAQkC,iBACN,SACA,KACE9B,EAAOd,EAAYe,MACnBQ,QAAQC,IAAI,oBACZX,GAAQ,EACRI,EAAYH,EAAMD,GAAMkC,MAAKe,IAC3B,IAAIX,EAAaC,KAAKC,KAAKS,EAAKZ,UApGxB,IAqGRvB,EAAcmC,GAEd,MAAQC,OAAQC,GAAelE,SAC5BC,cAAc,YACdkE,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLN,SAAU,WAGZ/C,IAAW2D,UACX/C,QAAQC,IAAI,iBAAiBX,KAEzBA,GAAQsC,IACVzC,EAAQgC,MAAMC,QAAU,OACxBpB,QAAQC,IAAI,4BACZ8B,SAASC,OAAOI,KACd,8D,GAGJ,IAEJ","sources":["src/index.js"],"sourcesContent":["'use strict';\n\nconst searchingBox = document.querySelector('.searching-box');\nconst searchQuery = document.querySelector('input[name=\"searchQuery\"]');\nconst upBtn = document.querySelector('.up-btn');\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst clear = elems => [...elems.children].forEach(div => div.remove());\nconst loadBtn = document.querySelector('.load-more');\nconst lightbox = () => new SimpleLightbox('.gallery a', {});\nlet perPage = 40;\nlet page = 0;\nlet name = searchQuery.value;\n\nloadBtn.style.display = 'none';\nupBtn.style.display = 'none';\n\nasync function fetchImages(name, page) {\n  try {\n    const response = await axios.get(\n      `https://pixabay.com/api/?key=23580980-4f75151f85975025bb6074227&q=${name}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`\n    );\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function eventHandler(ev) {\n  ev.preventDefault();\n  clear(gallery);\n  loadBtn.style.display = 'none';\n  page = 1;\n  name = searchQuery.value;\n  console.log(name);\n  fetchImages(name, page)\n    .then(name => {\n      console.log(`Number of arrays: ${name.hits.length}`);\n      console.log(`Total hits: ${name.totalHits}`);\n      let totalPages = Math.ceil(name.totalHits / perPage);\n      console.log(`Total pages: ${totalPages}`);\n\n      if (name.hits.length > 0) {\n        Notiflix.Notify.success(`Hooray! We found ${name.totalHits} images.`);\n        renderGallery(name);\n        console.log(`Current page: ${page}`);\n        lightbox();\n        //const lightbox = new SimpleLightbox('.gallery a', {});\n        //smooth scrool to up\n        upBtn.style.display = 'block';\n        upBtn.addEventListener('click', () => {\n          searchingBox.scrollIntoView({\n            behavior: 'smooth',\n          });\n        });\n\n        if (page < totalPages) {\n          loadBtn.style.display = 'block';\n        } else {\n          loadBtn.style.display = 'none';\n          console.log('There are no more images');\n          Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } else {\n        Notiflix.Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        clear(gallery);\n      }\n    })\n    .catch(error => console.log(error));\n}\n\nsearchForm.addEventListener('submit', eventHandler);\n\nfunction renderGallery(name) {\n  const markup = name.hits\n    .map(hit => {\n      return `<div class=\"photo-card\">\n      <a class=\"gallery__item\" href=\"${hit.largeImageURL}\"> <img class=\"gallery__image\" src=\"${hit.webformatURL}\" alt=\"${hit.tags}\" loading=\"lazy\" /></a>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <p><b>Likes</b> <br>${hit.likes}</br></p>\n        </p>\n        <p class=\"info-item\">\n          <p><b>Views</b> <br>${hit.views}</br></p>\n        </p>\n        <p class=\"info-item\">\n          <p><b>Comments</b> <br>${hit.comments}</br></p>\n        </p>\n        <p class=\"info-item\">\n          <p><b>Downloads</b> <br>${hit.downloads}</br></p>\n        </p>\n      </div>\n    </div>`;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nloadBtn.addEventListener(\n  'click',\n  () => {\n    name = searchQuery.value;\n    console.log('load more images');\n    page += 1;\n    fetchImages(name, page).then(name => {\n      let totalPages = Math.ceil(name.totalHits / perPage);\n      renderGallery(name);\n      //smooth scroll\n      const { height: cardHeight } = document\n        .querySelector('.gallery')\n        .firstElementChild.getBoundingClientRect();\n\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n      //===\n      lightbox().refresh();\n      console.log(`Current page: ${page}`);\n\n      if (page >= totalPages) {\n        loadBtn.style.display = 'none';\n        console.log('There are no more images');\n        Notiflix.Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    });\n  },\n  true\n);\n"],"names":["$1f0dc3b9307be026$var$searchingBox","document","querySelector","$1f0dc3b9307be026$var$searchQuery","$1f0dc3b9307be026$var$upBtn","$1f0dc3b9307be026$var$searchForm","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$clear","elems","children","forEach","div","remove","$1f0dc3b9307be026$var$loadBtn","$1f0dc3b9307be026$var$lightbox","SimpleLightbox","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$name","value","async","$1f0dc3b9307be026$var$fetchImages","name1","page1","response","axios","get","console","log","data","error","$1f0dc3b9307be026$var$renderGallery","name3","markup","hits","map","hit","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","style","display","addEventListener","ev","preventDefault","then","name2","length","totalHits","totalPages","Math","ceil","Notiflix","Notify","success","scrollIntoView","behavior","info","failure","catch","name4","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","refresh"],"version":3,"file":"index.5899a80b.js.map"}