{"mappings":"AACA,MAKMA,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,6BACrCE,EAAQH,SAASC,cAAc,WAC/BG,EAAaJ,SAASC,cAAc,gBACpCI,EAAUL,SAASC,cAAc,YACjCK,EAAQC,GAAS,IAAIA,EAAMC,UAAUC,SAAQC,GAAOA,EAAIC,WACxDC,EAAUZ,SAASC,cAAc,cACjCY,EAAW,IAAM,IAAIC,eAAe,aAAc,IACxD,IACIC,EAAO,EACPC,EAAQd,EAAYe,MAKxBC,eAAeC,EAAYC,EAAOC,GAChC,IACE,MAAMC,QAAiBC,MAAMC,IAC3B,4FAAqDJ,UAAcC,KAGrE,OADAI,QAAQC,IAAIJ,GACLA,EAASK,I,CAChB,MAAOC,GACPH,QAAQC,IAAIE,E,EAmDhB,SAASC,EAAcC,GACrB,MAAMC,EAASD,EACZE,KAAIC,GACI,uIAC+FA,EAAMC,qBAAqBD,EAAME,0GAE9FF,EAAME,kEACCF,EAAMG,qEACVH,EAAMI,mEACJJ,EAAMK,iDAIrDC,KAAK,IACRlC,EAAQmC,mBAAmB,YAAaT,E,CA5E1CnB,EAAQ6B,MAAMC,QAAU,OACxBvC,EAAMsC,MAAMC,QAAU,OA2DtBtC,EAAWuC,iBAAiB,UA7C5BzB,eAA4B0B,GAC1BA,EAAGC,iBACHvC,EAAMD,GACNO,EAAQ6B,MAAMC,QAAU,OACxB3B,EAAO,EACPC,EAAQd,EAAYe,MACpBQ,QAAQC,IAAIV,GACZG,EAAYH,EAAOD,GAChB+B,MAAKnB,IACJF,QAAQC,IAAI,sBAAsBC,EAAKG,QAAQiB,UAC/CtB,QAAQC,IAAI,kBAAkBC,EAAKqB,iBACnC,IAAIC,EAAaC,KAAKC,KAAKxB,EAAKqB,cA9BxB,IA+BRvB,QAAQC,IAAI,gBAAgBuB,KAExBtB,EAAKG,QAAQiB,OAAS,GACxBK,SAASC,OAAOC,QAAQ,oBAAoB3B,EAAKqB,yBACjDnB,EAAcF,EAAKG,SACnBL,QAAQC,IAAI,iBAAiBX,KAC7BF,IACAV,EAAMsC,MAAMC,QAAU,QACtBvC,EAAMwC,iBAAiB,SAAS,KAC9B5C,EAAawD,eAAe,CAC1BC,SAAU,UACV,IAGAzC,EAAOkC,EACTrC,EAAQ6B,MAAMC,QAAU,SAExB9B,EAAQ6B,MAAMC,QAAU,OACxBjB,QAAQC,IAAI,4BACZ0B,SAASC,OAAOI,KACd,iEAIJL,SAASC,OAAOK,QACd,4EAEFpD,EAAMD,G,IAGTsD,OAAM/B,GAASH,QAAQC,IAAIE,I,IAsBhChB,EAAQ+B,iBACN,SACA,KACE3B,EAAQd,EAAYe,MACpBQ,QAAQC,IAAI,oBACZX,GAAQ,EACRI,EAAYH,EAAOD,GAAM+B,MAAKnB,IAC5B,IAAIsB,EAAaC,KAAKC,KAAKxB,EAAKqB,cA1FxB,IA2FRnB,EAAcF,EAAKG,SACnB,MAAQ8B,OAAQC,GAAe7D,SAC5BC,cAAc,YACd6D,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLL,SAAU,WAEZ3C,IAAWsD,UACX1C,QAAQC,IAAI,iBAAiBX,KAEzBA,GAAQkC,IACVrC,EAAQ6B,MAAMC,QAAU,OACxBjB,QAAQC,IAAI,4BACZ0B,SAASC,OAAOI,KACd,8D,GAGJ,IAEJ","sources":["src/index.js"],"sourcesContent":["\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '31105a6b8ebd34e8f5577c23e6678fa8'; \n\n'use strict';\n\nconst searchingBox = document.querySelector('.searching-box');\nconst searchQuery = document.querySelector('input[name=\"searchQuery\"]');\nconst upBtn = document.querySelector('.up-btn');\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst clear = elems => [...elems.children].forEach(div => div.remove());\nconst loadBtn = document.querySelector('.load-more');\nconst lightbox = () => new SimpleLightbox('.gallery a', {});\nlet perPage = 40;\nlet page = 0;\nlet query = searchQuery.value;\n\nloadBtn.style.display = 'none';\nupBtn.style.display = 'none';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function eventHandler(ev) {\n  ev.preventDefault();\n  clear(gallery);\n  loadBtn.style.display = 'none';\n  page = 1;\n  query = searchQuery.value;\n  console.log(query);\n  fetchMovies(query, page)\n    .then(data => {\n      console.log(`Number of results: ${data.results.length}`);\n      console.log(`Total results: ${data.total_results}`);\n      let totalPages = Math.ceil(data.total_results / perPage);\n      console.log(`Total pages: ${totalPages}`);\n\n      if (data.results.length > 0) {\n        Notiflix.Notify.success(`Hooray! We found ${data.total_results} movies.`);\n        renderGallery(data.results);\n        console.log(`Current page: ${page}`);\n        lightbox();\n        upBtn.style.display = 'block';\n        upBtn.addEventListener('click', () => {\n          searchingBox.scrollIntoView({\n            behavior: 'smooth',\n          });\n        });\n\n        if (page < totalPages) {\n          loadBtn.style.display = 'block';\n        } else {\n          loadBtn.style.display = 'none';\n          console.log('There are no more movies');\n          Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } else {\n        Notiflix.Notify.failure(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n        clear(gallery);\n      }\n    })\n    .catch(error => console.log(error));\n}\n\nsearchForm.addEventListener('submit', eventHandler);\n\nfunction renderGallery(results) {\n  const markup = results\n    .map(movie => {\n      return `<div class=\"movie-card\">\n        <a class=\"gallery__item\" href=\"#\"><img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" /></a>\n        <div class=\"info\">\n          <p class=\"info-item\"><b>Title:</b> ${movie.title}</p>\n          <p class=\"info-item\"><b>Release Date:</b> ${movie.release_date}</p>\n          <p class=\"info-item\"><b>Overview:</b> ${movie.overview}</p>\n          <p class=\"info-item\"><b>Popularity:</b> ${movie.popularity}</p>\n        </div>\n      </div>`;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nloadBtn.addEventListener(\n  'click',\n  () => {\n    query = searchQuery.value;\n    console.log('load more movies');\n    page += 1;\n    fetchMovies(query, page).then(data => {\n      let totalPages = Math.ceil(data.total_results / perPage);\n      renderGallery(data.results);\n      const { height: cardHeight } = document\n        .querySelector('.gallery')\n        .firstElementChild.getBoundingClientRect();\n\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n      lightbox().refresh();\n      console.log(`Current page: ${page}`);\n\n      if (page >= totalPages) {\n        loadBtn.style.display = 'none';\n        console.log('There are no more movies');\n        Notiflix.Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    });\n  },\n  true\n);\n\n"],"names":["$1f0dc3b9307be026$var$searchingBox","document","querySelector","$1f0dc3b9307be026$var$searchQuery","$1f0dc3b9307be026$var$upBtn","$1f0dc3b9307be026$var$searchForm","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$clear","elems","children","forEach","div","remove","$1f0dc3b9307be026$var$loadBtn","$1f0dc3b9307be026$var$lightbox","SimpleLightbox","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$query","value","async","$1f0dc3b9307be026$var$fetchMovies","query1","page1","response","axios","get","console","log","data","error","$1f0dc3b9307be026$var$renderGallery","results","markup","map","movie","poster_path","title","release_date","overview","popularity","join","insertAdjacentHTML","style","display","addEventListener","ev","preventDefault","then","length","total_results","totalPages","Math","ceil","Notiflix","Notify","success","scrollIntoView","behavior","info","failure","catch","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","refresh"],"version":3,"file":"index.a1289844.js.map"}