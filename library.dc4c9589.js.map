{"mappings":"mjBAIA,IAAIA,EAAU,GACVC,EAAc,GACdC,EAAU,GACVC,EAAQ,GACRC,EAAe,GAwBnB,GArBCC,OAAMC,iBAAiB,QAAQ,WAE3BC,YAAU,WACPC,SAASC,eAAe,UAAUC,MAAMC,QAAU,M,GACnD,I,IAIHC,aAAaC,QAAQ,WACrBX,EAAUY,KAAKC,MAAMH,aAAaC,QAAQ,YAE1CG,QAAQC,IAAI,sCAIZL,aAAaC,QAAQ,WACrBb,EAAUc,KAAKC,MAAMH,aAAaC,QAAQ,YAE1CG,QAAQC,IAAI,sCAGZL,aAAaC,QAAQ,aAAc,CACnC,IAAIK,EAASJ,KAAKC,MAAMH,aAAaC,QAAQ,cAC7C,IAAK,MAAMM,KAAMnB,EACb,IAAK,IAAIoB,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC3BpB,EAAQmB,IAAOD,EAAOE,GAAGD,IACzBlB,EAAYqB,KAAKJ,EAAOE,G,MAKpCJ,QAAQC,IAAI,sCAUhB,GANIL,aAAaC,QAAQ,SACrBV,EAAQW,KAAKC,MAAMH,aAAaC,QAAQ,UAExCG,QAAQC,IAAI,sCAGZL,aAAaC,QAAQ,aAAc,CACnC,IAAIK,EAASJ,KAAKC,MAAMH,aAAaC,QAAQ,cAC7C,IAAK,MAAMM,KAAMhB,EACb,IAAK,IAAIiB,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC3BjB,EAAMgB,IAAOD,EAAOE,GAAGD,IACvBf,EAAakB,KAAKJ,EAAOE,G,MAKrCJ,QAAQC,IAAI,sCAGT,SAASM,EAAcL,GAC1B,MAAMM,EAAahB,SAASiB,cAAc,YAC1CD,EAAWE,UAAY,GACvBR,EAAOS,SAASC,IACZ,MAAMC,EAAWrB,SAASsB,cAAc,MACxCD,EAASE,aAAa,kBAAmB,IACzCF,EAASG,UAAUC,IAAI,iBACvBJ,EAASE,aAAa,KAAM,GAAGH,EAAMT,MAErC,MAAMe,EAAQ1B,SAASsB,cAAc,OACrCI,EAAMC,IAAM,kCAAkCP,EAAMQ,cACpDF,EAAMG,IAAMT,EAAMU,MAElB,MAAMC,EAAY/B,SAASsB,cAAc,MACzCS,EAAUP,UAAUC,IAAI,gBACxBM,EAAUC,YAAc,GAAGZ,EAAMU,QAEjC,MAAMG,EAAajC,SAASsB,cAAc,KAC1CW,EAAWT,UAAUC,IAAI,gBAEzB,IAAK,MAAMd,KAAMjB,EACb,IAAK,IAAIkB,EAAI,EAAGA,EAAIQ,EAAMc,UAAUrB,OAAQD,IACpClB,EAAQiB,GAAIA,IAAMS,EAAMc,UAAUtB,IAClCqB,EAAWE,OAAO,GAAGzC,EAAQiB,GAAIyB,SAK7CH,EAAWE,OAAO,MAAMf,EAAMiB,aAAaC,UAAU,EAAG,OAExDjB,EAASkB,YAAYb,GACrBL,EAASkB,YAAYR,GACrBV,EAASkB,YAAYN,GACrBjB,EAAWuB,YAAYlB,EAAS,KAGpC,EAAAmB,EAAAC,YACA,EAAAC,EAAAC,aAAYjC,EAAOhB,E,ECpGhB,SAAyBkD,GAE9B,MAAMC,EAAO,IAAID,GACjB,IACIE,EAAc,EAGhB,SAAOC,IACP,MAAMC,EALW,IAKGF,EAAc,GAC5BG,EAAWD,EANA,GAOXE,EAAcL,EAAKM,MAAMH,EAAYC,GAS3C,OAPsBjD,SAASC,eAAe,kBAChCiB,UAAY,GAE1BgC,EAAY/B,SAAQiC,IACRpD,SAASsB,cAAc,OAC/BU,YAAcoB,CAAI,IAEfF,C,CA6FTH,IAzFE,SAAOM,IACP,MAAMC,EAAaC,KAAKC,KAAKX,EAAKhC,OArBjB,IAsBX4C,EAAsBzD,SAASC,eAAe,wBACpDwD,EAAoBvC,UAAY,GAGhC,MAAMwC,EAAa1D,SAASsB,cAAc,UAC1CoC,EAAW1B,YAAc,IACzB0B,EAAWlC,UAAUC,IAAI,qBACzBiC,EAAW5D,iBAAiB,SAAS,KAC/BgD,EAAc,IAChBA,IACAC,IACAM,I,IAGJI,EAAoBlB,YAAYmB,GAEhC,MAAMC,EAAc3D,SAASsB,cAAc,UAU3C,GATEqC,EAAY3B,YAAc,IAC1B2B,EAAYnC,UAAUC,IAAI,qBAC1BkC,EAAY7D,iBAAiB,SAAS,KACtCgD,EAAc,EACdC,IACAM,GAAkB,IAEpBI,EAAoBlB,YAAYoB,GAE5Bb,EAAc,EAAG,CACnB,MAAMc,EAAY5D,SAASsB,cAAc,QACzCsC,EAAU5B,YAAc,MACxByB,EAAoBlB,YAAYqB,E,CAElC,IACE,IAAIhD,EAAI2C,KAAKM,IAAI,EAAGf,EAAc,GAClClC,GAAK2C,KAAKO,IAAIR,EAAa,EAAGR,EAAc,GAC5ClC,IACA,CACF,MAAMmD,EAAS/D,SAASsB,cAAc,UACtCyC,EAAO/B,YAAcpB,EACrBmD,EAAOvC,UAAUC,IAAI,qBACjBb,IAAMkC,GACRiB,EAAOvC,UAAUC,IAAI,gBAEtBsC,EAAMjE,iBAAiB,SAAS,KAC/BgD,EAAclC,EACdmC,IACAM,GAAkB,IAElBI,EAAoBlB,YAAYwB,E,CAKlC,GAAIjB,EAAcQ,EAAa,EAAG,CAChC,MAAMU,EAAYhE,SAASsB,cAAc,QACzC0C,EAAUhC,YAAc,MACxByB,EAAoBlB,YAAYyB,E,CAGlC,GAAIV,EAAa,EAAG,CAClB,MAAMW,EAAajE,SAASsB,cAAc,UAC1C2C,EAAWjC,YAAcsB,EACzBW,EAAWzC,UAAUC,IAAI,qBACzBwC,EAAWnE,iBAAiB,SAAS,KACnCgD,EAAcQ,EACdP,IACAM,GAAkB,IAEpBI,EAAoBlB,YAAY0B,E,CAGlC,MAAMC,EAAalE,SAASsB,cAAc,UAC1C4C,EAAWlC,YAAc,IACzBkC,EAAW1C,UAAUC,IAAI,qBACzByC,EAAWpE,iBAAiB,SAAS,KAC/BgD,EAAcQ,IAChBR,IACAC,IACAM,I,IAGJI,EAAoBlB,YAAY2B,GAEhCnD,EAAcgC,I,CAMhBM,E,CDVF,CAAgB5D,GAEhB,MAAM0E,EAAanE,SAASC,eAAe,WACrCmE,EAAWpE,SAASC,eAAe,SAEzCkE,EAAWrE,iBAAiB,SAASuE,MAAOC,IACxCA,EAAMC,iBACLxD,EAAatB,GACd0E,EAAW3C,UAAUgD,OAAO,mBAC5BJ,EAAS5C,UAAUgD,OAAO,kBAAkB,IAGhDJ,EAAStE,iBAAiB,SAASuE,MAAOC,IACtCA,EAAMC,iBACNxD,EAAcnB,GACduE,EAAW3C,UAAUgD,OAAO,mBAC5BJ,EAAS5C,UAAUgD,OAAO,kBAAkB,I,sBEzHhD,IAAAC,EAAAC,EAAA,SAGuB1E,SAAS2E,iBAAiB,mBAGlCxD,SAAQ4C,IACrBA,EAAOjE,iBAAiB,SAAS,YAkBnC,SAA2Ba,GACzB,IAAIiE,EAAUtE,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,GAE3D,GAAEuE,EAAQC,SAASlE,GAAK,CACxB,IAAImE,EAAMF,EAAQG,QAAQpE,GAC1BiE,EAAQI,OAAOF,EAAK,GACpB1E,aAAa6E,QAAQ,UAAW3E,KAAK4E,UAAUN,IAC/CO,EAAAV,GAASW,OAAOC,QAAQ,gC,EAvBxBC,CADgBtF,SAASiB,cAAc,oBAAoBsE,U,GAE3D,IAKsBvF,SAAS2E,iBAAiB,sBAGlCxD,SAAQ4C,IACxBA,EAAOjE,iBAAiB,SAAS,YAiBnC,SAAyBa,GACvB,IAAI6E,EAAQlF,KAAKC,MAAMH,aAAaC,QAAQ,WAAa,GAEzD,GAAImF,EAAMX,SAASlE,GAAK,CACtB,IAAImE,EAAMU,EAAMT,QAAQpE,GACxB6E,EAAMR,OAAOF,EAAK,GAClB1E,aAAa6E,QAAQ,QAAS3E,KAAK4E,UAAUM,IAC7CL,EAAAV,GAASW,OAAOC,QAAQ,yC,EAtBxBI,CADgBzF,SAASiB,cAAc,oBAAoBsE,U,GAEzD","sources":["src/js/mostrar_libreria.js","src/js/paginacion_library.js","src/js/eliminar_pelicula.js"],"sourcesContent":["import { hacerPaginacion } from \"./paginacion_library\";\nimport { modales } from \"./modal_pelicula\";\nimport { llenarmodal } from \"./llenar_modal\";\n\nlet watched = [];\nlet pelisvistas = [];\nlet generos = [];\nlet queue = [];\nlet pelisparaver = [];\n\n// Espera a que la página se cargue completamente\nwindow.addEventListener(\"load\", function() {\n    // Oculta el spinner después de 4 segundos\n    setTimeout(function() {\n        document.getElementById(\"loader\").style.display = \"none\";\n    }, 3000); // 4000 ms = 4 segundos\n});\n\n// SE RECUPERAN LOS GENEROS\nif (localStorage.getItem('generos')) {\n    generos = JSON.parse(localStorage.getItem('generos'));\n} else {\n    console.log('El dato no existe en localStorage.');\n}\n\n// PARA PELICULAS VISTAS\nif (localStorage.getItem('watched')) {\n    watched = JSON.parse(localStorage.getItem('watched'));\n} else {\n    console.log('El dato no existe en localStorage.');\n}\n\nif (localStorage.getItem('peliculas')) {\n    let movies = JSON.parse(localStorage.getItem('peliculas'));\n    for (const id in watched) {\n        for (let i = 0; i < movies.length; i++) {\n            if (watched[id] == movies[i].id) {\n                pelisvistas.push(movies[i]);\n            }\n        }\n    }\n} else {\n    console.log('El dato no existe en localStorage.');\n}\n\n// PARA PELICULAS POR VER\nif (localStorage.getItem('queue')) {\n    queue = JSON.parse(localStorage.getItem('queue'));\n} else {\n    console.log('El dato no existe en localStorage.');\n}\n\nif (localStorage.getItem('peliculas')) {\n    let movies = JSON.parse(localStorage.getItem('peliculas'));\n    for (const id in queue) {\n        for (let i = 0; i < movies.length; i++) {\n            if (queue[id] == movies[i].id) {\n                pelisparaver.push(movies[i]);\n            }\n        }\n    }\n} else {\n    console.log('El dato no existe en localStorage.');\n}\n\nexport function displayMovies(movies) {\n    const galleryDiv = document.querySelector(\".gallery\");\n    galleryDiv.innerHTML = \"\"; // Limpiar el contenido existente\n    movies.forEach((movie) => {\n        const movieDiv = document.createElement(\"li\");\n        movieDiv.setAttribute(\"data-modal-open\", \"\");\n        movieDiv.classList.add(\"gallery__item\");\n        movieDiv.setAttribute(\"id\", `${movie.id}`);\n    \n        const image = document.createElement(\"img\");\n        image.src = `https://image.tmdb.org/t/p/w400${movie.poster_path}`;\n        image.alt = movie.title;\n\n        const paragraph = document.createElement(\"h3\");\n        paragraph.classList.add(\"movie-tittle\");\n        paragraph.textContent = `${movie.title}`;\n\n        const paragraph2 = document.createElement(\"p\");\n        paragraph2.classList.add(\"movie-gender\");\n\n        for (const id in generos) {\n            for (let i = 0; i < movie.genre_ids.length; i++) {\n                if (generos[id].id == movie.genre_ids[i]) {\n                    paragraph2.append(`${generos[id].name} `);\n                }\n            }\n        }\n\n        paragraph2.append(`| (${movie.release_date.substring(0, 4)})`);\n\n        movieDiv.appendChild(image);\n        movieDiv.appendChild(paragraph);\n        movieDiv.appendChild(paragraph2);\n        galleryDiv.appendChild(movieDiv);\n    });\n\n    modales();\n    llenarmodal(movies,generos);\n}\n\nhacerPaginacion(pelisvistas);\n\nconst btnwatched = document.getElementById(\"watched\");\nconst btnqueue = document.getElementById(\"queue\");\n\nbtnwatched.addEventListener(\"click\", async (event) => {\n    event.preventDefault(); // Evitar que se recargue la página\n    displayMovies(pelisvistas);\n    btnwatched.classList.toggle(\"button_selected\");\n    btnqueue.classList.toggle(\"button_selected\");\n});\n\nbtnqueue.addEventListener(\"click\", async (event) => {\n    event.preventDefault(); // Evitar que se recargue la página\n    displayMovies(pelisparaver);\n    btnwatched.classList.toggle(\"button_selected\");\n    btnqueue.classList.toggle(\"button_selected\");\n});\n\n","import { displayMovies } from \"./mostrar_libreria\";\n\nexport function hacerPaginacion(allMovies) { \n\n  const data = [...allMovies];// Tu conjunto de datos\n  let itemsPerPage = 20; // Número de elementos por página\n  let currentPage = 1; // Página actual\n\n  // Función para renderizar los datos de la página actual\n  function renderData() {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentData = data.slice(startIndex, endIndex);\n\n    const dataContainer = document.getElementById('data-container');\n    dataContainer.innerHTML = ''; // Limpiar contenedor de datos\n\n    currentData.forEach(item => {\n    const div = document.createElement('div');\n    div.textContent = item;\n    }); \n    return currentData;\n  }\n\n  // Función para renderizar la paginación\n  function renderPagination() {\n    const totalPages = Math.ceil(data.length / itemsPerPage);\n    const paginationContainer = document.getElementById('pagination-container');\n    paginationContainer.innerHTML = ''; // Limpiar contenedor de paginación\n\n    // Agregar flecha para pagina anterior\n    const prevButton = document.createElement('button');\n    prevButton.textContent = '<';\n    prevButton.classList.add('pagination-button');\n    prevButton.addEventListener('click', () => {\n      if (currentPage > 1) {\n        currentPage--;\n        renderData();\n        renderPagination();\n      }\n    });\n    paginationContainer.appendChild(prevButton);\n\n    const firstButton = document.createElement('button');\n      firstButton.textContent = '1';\n      firstButton.classList.add('pagination-button');\n      firstButton.addEventListener('click', () => { \n      currentPage = 1;\n      renderData();\n      renderPagination();\n    });\n    paginationContainer.appendChild(firstButton);\n\n    if (currentPage > 3) {\n      const ellipsis1 = document.createElement('span');\n      ellipsis1.textContent = '...';\n      paginationContainer.appendChild(ellipsis1);\n    }\n    for (\n      let i = Math.max(2, currentPage - 1);\n      i <= Math.min(totalPages - 1, currentPage + 1);\n      i++\n    ) {\n    const button = document.createElement('button');\n    button.textContent = i;\n    button.classList.add('pagination-button');\n    if (i === currentPage) {\n      button.classList.add('current-page'); // Agregar clase CSS para la página actual\n    }\n    button.addEventListener('click', () => {\n      currentPage = i;\n      renderData();\n      renderPagination();\n    });\n      paginationContainer.appendChild(button);\n    }\n\n    \n\n    if (currentPage < totalPages - 2) {\n      const ellipsis2 = document.createElement('span');\n      ellipsis2.textContent = '...';\n      paginationContainer.appendChild(ellipsis2);\n    }\n\n    if (totalPages > 1) {\n      const lastButton = document.createElement('button');\n      lastButton.textContent = totalPages;\n      lastButton.classList.add('pagination-button');\n      lastButton.addEventListener('click', () => {\n        currentPage = totalPages;\n        renderData();\n        renderPagination();\n      });\n      paginationContainer.appendChild(lastButton);\n    }\n    // Agregar flecha para pagina siguiente\n    const nextButton = document.createElement('button');\n    nextButton.textContent = '>';\n    nextButton.classList.add('pagination-button');\n    nextButton.addEventListener('click', () => {\n      if (currentPage < totalPages) {\n        currentPage++;\n        renderData();\n        renderPagination();\n      }\n    });\n    paginationContainer.appendChild(nextButton);\n\n    displayMovies(renderData());\n\n  }\n\n  // Renderizar la primera página de datos y la paginación\n  renderData();\n  renderPagination();\n}","import Notiflix from 'notiflix';\n\n// Para seleccionar todos los botones con clase 'watched-button'\nconst watchedButtons = document.querySelectorAll('.watched-button');\n\n// Se le agrega a cada boton el event listener\nwatchedButtons.forEach(button => { \n  button.addEventListener('click', function () {\n    const movieId = document.querySelector(\".information__id\").innerText;\n    eliminarComoVista(movieId);\n  });\n});\n\n\n// Para seleccionar todos los botones con clase 'watched-button'\nconst addToQueueButtons = document.querySelectorAll('.addToQueue-button');\n\n// Se le agrega a cada boton el event listener\naddToQueueButtons.forEach(button => {\n  button.addEventListener('click', function () {\n    const movieId = document.querySelector(\".information__id\").innerText;\n    eliminarParaVer(movieId);\n    });\n});\n\nfunction eliminarComoVista(id) {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  // Verificar si la película ya está marcada como favorita\n  if (watched.includes(id)) {\n    let num = watched.indexOf(id);\n    watched.splice(num, 1);\n    localStorage.setItem('watched', JSON.stringify(watched));\n    Notiflix.Notify.success(\"Pelicula eliminada en vistas.\");\n  }\n}\n\nfunction eliminarParaVer(id) {\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n  // Verificar si la película ya está marcada como favorita\n  if (queue.includes(id)) {\n    let num = queue.indexOf(id);\n    queue.splice(num, 1);\n    localStorage.setItem('queue', JSON.stringify(queue));\n    Notiflix.Notify.success(\"Pelicula eliminada para ver mas tarde.\");\n  }\n}"],"names":["$92d6b76e37f6b34c$var$watched","$92d6b76e37f6b34c$var$pelisvistas","$92d6b76e37f6b34c$var$generos","$92d6b76e37f6b34c$var$queue","$92d6b76e37f6b34c$var$pelisparaver","window","addEventListener","setTimeout","document","getElementById","style","display","localStorage","getItem","JSON","parse","console","log","movies","id","i","length","push","$92d6b76e37f6b34c$export$80c33a899040816b","galleryDiv","querySelector","innerHTML","forEach","movie","movieDiv","createElement","setAttribute","classList","add","image","src","poster_path","alt","title","paragraph","textContent","paragraph2","genre_ids","append","name","release_date","substring","appendChild","$biSGl","modales","$ntFA1","llenarmodal","allMovies","data","currentPage","renderData","startIndex","endIndex","currentData","slice","item","renderPagination","totalPages","Math","ceil","paginationContainer","prevButton","firstButton","ellipsis1","max","min","button","ellipsis2","lastButton","nextButton","$92d6b76e37f6b34c$var$btnwatched","$92d6b76e37f6b34c$var$btnqueue","async","event","preventDefault","toggle","$1GAPJ","parcelRequire","querySelectorAll","watched","includes","num","indexOf","splice","setItem","stringify","$parcel$interopDefault","Notify","success","$d06bd11bc76b3234$var$eliminarComoVista","innerText","queue","$d06bd11bc76b3234$var$eliminarParaVer"],"version":3,"file":"library.dc4c9589.js.map"}